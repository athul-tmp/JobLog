name: Deploy JobLog Backend to Cloud Run

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
  workflow_dispatch:

env:
  PROJECT_ID: joblog-athul-2025
  SERVICE_NAME: joblog-api
  REGION: australia-southeast1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Authenticate to Google Cloud using the GitHub Secret
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      # Setup Google Cloud SDK
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: ${{ env.PROJECT_ID }}

      # Configure Docker to use Artifact Registry
      - name: "Configure Docker for Artifact Registry"
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # Create Artifact Registry Repository
      - name: "Create Artifact Repository"
        run: |
          gcloud artifacts repositories create ${{ env.SERVICE_NAME }} \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --description="JobLog Backend Container Images" || true

      # Build and Push the Docker Image
      - name: Build and Push Docker Image
        run: |
          # Define image path dynamically using shell variables
          IMAGE_PATH="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}"
          IMAGE_TAG="${IMAGE_PATH}/${{ env.SERVICE_NAME }}:${{ github.sha }}"

          docker build \
            --tag $IMAGE_TAG \
            ./backend 
            
          docker push $IMAGE_TAG
          # Export the image tag so the next step (6) can use it
          echo "DOCKER_IMAGE=$IMAGE_TAG" >> $GITHUB_ENV

      # Deploy the Container Image to Cloud Run
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.DOCKER_IMAGE }}

          # Pass configuration
          flags: |
            --allow-unauthenticated 
            --max-instances 1
            --no-cpu-throttling

          # Environment secrets
          env_vars: |
            ConnectionStrings__DefaultConnection=${{ secrets.SUPABASE_CONNECTION_STRING }}
            JwtSettings__Key=${{ secrets.JWT_SECRET }}

      # Map the custom domain
      - name: Map Custom Domain
        run: |
          gcloud run domain-mappings create \
            --service ${{ env.SERVICE_NAME }} \
            --domain api.joblog.athulthampan.com \
            --region ${{ env.REGION }} || true
